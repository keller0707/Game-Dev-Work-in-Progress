pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
-- memsplore
-- by krystian majewski, lazy devs

function _init()
 

 version="0.2.5e"
 
 cartdata("memsplore")
 anit=0
 sback=35
 uicol=8
 scrpos=0x5f2c
 selpos=0x5f2c
 --scrpos=0x7ff0
 --selpos=0x7ff0
 scrpos=0
 selpos=10
 selmap=-1
 maph=0
 
 selhex=0
 xscrpos=0
 dscrpos=0
 
 selcol=0
 jcur=1
 jtxt=""
 released=true
 dontclick=false
 poke(0x5f2d, 1)
 debug="the lazy fox jumped over the fence"

 info=
	{
	{0x0,0x0fff,"sprite sheet (0-127)"},
	{0x1000,0x1fff,"sprite sheet/map (128-255)"},
	{0x2000,0x2fff,"map (rows 0-31)"},
	{0x3000,0x30ff,"sprite flags"},
	{0x3100,0x31ff,"music"},
	{0x3200,0x42ff,"sound effects"},
	{0x4300,0x55ff,"general use (work ram)"},
	{0x5600,0x5607,"custom font"},
	{0x5608,0x567f,"font character widths"},
	{0x5680,0x5dff,"custom font"},
	{0x5e00,0x5eff,"persistent cart data"},
	{0x5f00,0x5f3f,"draw state"},
	{0x5f40,0x5f7f,"hardware state"},
	{0x5f80,0x5fff,"gpio pins"},
	{0x6000,0x7fff,"screen data"},

	{0x5600,0x5600,"custom font-width"},
	{0x5601,0x5601,"custom font-width 128"},
	{0x5602,0x5602,"custom font-height"},
	{0x5603,0x5603,"custom font-offset x"},
	{0x5604,0x5604,"custom font-offset y"},
	{0x5605,0x5605,"custom font-undocumented"},
	{0x5606,0x5606,"custom font-undocumented"},
	{0x5607,0x5607,"custom font-undocumented"},

	{0x5f00,0x5f0f,"draw palette"},
	{0x5f10,0x5f1f,"screen palette"},
	{0x5f20,0x5f23,"clipping rectangle"},
	{0x5f24,0x5f24,"unknown"},
	{0x5f25,0x5f25,"pen color"},
	{0x5f26,0x5f27,"print cursor"},
	{0x5f28,0x5f2b,"camera position"},
	{0x5f2c,0x5f2c,"draw mode"},
	{0x5f2d,0x5f2d,"devkit mode"},
	{0x5f2e,0x5f2e,"persitent palette switch"},
	{0x5f2f,0x5f2f,"music/sfx pause"},
	{0x5f30,0x5f30,"menu supression"},
	{0x5f31,0x5f32,"fill pattern"},
	{0x5f33,0x5f33,"pattern transparency"},
	{0x5f34,0x5f34,"pattern api color switch"},
	{0x5f35,0x5f35,"line endpoint switch"},
	{0x5f36,0x5f36,"misc. chipset features"},
	{0x5f37,0x5f37,"unknown"},
	{0x5f38,0x5f3b,"tline values"},
	{0x5f3c,0x5f3f,"line endpoint"},
	{0x5f40,0x5f43,"audio registers"},
	{0x5f44,0x5f4b,"rng state"},
	{0x5f4c,0x5f53,"button states"},
	{0x5f54,0x5f54,"spritesheet address"},
	{0x5f55,0x5f55,"screen address"},	
	{0x5f56,0x5f56,"map address"},	
	{0x5f57,0x5f57,"map width"},	
	{0x5f58,0x5f5b,"unknown"},
	{0x5f5c,0x5f5c,"btnp delay (initial)"},
	{0x5f5d,0x5f5d,"btnp delay"},
	{0x5f5e,0x5f5e,"color bitmask"},
	{0x5f58,0x5f58,"print attributes"},
	{0x5f59,0x5f59,"char w / char h"},
	{0x5f5a,0x5f5a,"char w2 / tab w"},
	{0x5f5b,0x5f5b,"offset x / offset y"},
	{0x5f5f,0x5f5f,"secondary palette effect"},
	{0x5f60,0x5f6f,"secondary palette"},
	{0x5f70,0x5f7f,"secondary palette bitfield"}
	} 
	
 _upd=upd_list
 _drw=drw_list

	local day,month=dget(1),dget(2)
 if month!=stat(91) or day!=stat(92) then
  _upd=upd_start
  _drw=drw_start
 end
 
 dset(2,stat(91))
 dset(1,stat(92))
 
 butts={
        {11,0,9,8,"search"},
        {118,0,9,8,"list"},
        {109,0,9,8,"hex"},
        {100,0,9,8,"dots"},
        {2,0,9,8,"map"},
							}
							
	mousec=0
	
 minfo=
	{	
	{0x0,0x0fff,"sprite sheet (0-127)",2},
	{0x1000,0x1fff,"sprite sheet/map (128-255)",5},
	{0x2000,0x2fff,"map (rows 0-31)",3},
	{0x3000,0x30ff,"sprite flags",12},
	{0x3100,0x31ff,"music",15},
	{0x3200,0x42ff,"sound effects",14},
	{0x4300,0x55ff,"general use (work ram)",4},
	{0x5600,0x5607,"custom font setup",15},
	{0x5608,0x567f,"font char widths",6},
	{0x5680,0x5dff,"custom font",15},
	{0x5e00,0x5eff,"persistent cart data",3},	
	{0x5f00,0x5f3f,"draw state",11},
	{0x5f40,0x5f7f,"hardware state",8},
	{0x5f80,0x5fff,"gpio pins",10},
	{0x6000,0x7fff,"screen data",13},
 }
end

function _draw()
 _drw()
end

function _update()
 _upd()

end

function conv(b)
 t=""
 a=0
 for i = 7,0,-1 do
  a=2^i
  t=t..tostr(band(a,b)/a)
 end
 return t
end


function val3(v)
 ret=""
 if v<10 then
  return "00"..tostr(v)
 elseif v<100 then
  return "0"..tostr(v)
 else
  return tostr(v)
 end
end

function adrinfo(loc)
 ret="???"
 for i in all(info) do
  if loc>=i[1] and loc<=i[2] then
   ret=i[3]
  end
 end
 return ret
end

function buttcheck()
 local mx,my=stat(32),stat(33)
 for b in all(butts) do
  if mx>=b[1] and mx<b[1]+b[3] and my>=b[2] and my<b[2]+b[4] then
   return b[5]
  end
 end
 return ""
end

function drawmouse()
 local mx,my=stat(32),stat(33)
 if mousec==0 then
  spr(mousec,mx,my)
 elseif mousec==1 or mousec==3 then
  mx-=3
  my-=1
  spr(mousec,mx,my,2,1)
  spr(mousec+16,mx,my+8)
 end
 
end

function subs(src,ch,pos)
 local v1=sub(src,1,pos-1)
 local v2=sub(src,pos+1,#src)
 return v1..ch..v2
end

function checkrelease()
 if buttcheck()=="" then
  mousec=0
  released=true
 else
  if not released then
   mousec=3
  else
   mousec=1
  end
 end
 if stat(34)!=1 then
  released=true 
 end
end

function drawtop(sel)
 local i=1
 sel=sel-1
 rectfill(0,0,127,7,uicol)
 spr(48,3,0) 
 spr(21,12,0)
 for s in all({20,18,16}) do
  if i==sel then
   pal(2,15)
  end
  spr(s,82+9+i*9,0)
  i+=1
  pal()
 end
end

function drawbottom()
 rectfill(0,121,127,127,uicol)
 --print(debug,1,122,2)
 print(sub(tostr(selpos,true),0,6)..":"..adrinfo(selpos),1,122,2)
end

function doscroll()
 if scrpos-selpos<-17 then
  local dif=scrpos-selpos
  if abs(dif+17)>17 then
   scrpos-=flr(dif/5)
  else
	  scrpos=scrpos+1
	 end
 elseif scrpos-selpos>0 then
  local dif=scrpos-selpos
  if abs(dif)>17 then
   scrpos-=flr(dif/5)
  else
	  scrpos=scrpos-1
	 end
 end
 
 if xscrpos-selpos<-107 then
  local dif=xscrpos-selpos
  if abs(dif)>214 then
   xscrpos-=flr(flr(dif/5)/6)*6
  else
	  xscrpos=xscrpos+6
	 end
 elseif xscrpos-selpos>0 then
  local dif=xscrpos-selpos
  if abs(dif)>214 then
   xscrpos-=flr(flr(dif/5)/6)*6
  else
	  xscrpos=xscrpos-6
	 end
 end
 
 if dscrpos-selpos<-447 then
  local dif=dscrpos-selpos
  if abs(dif)>640 then
   dscrpos-=flr(flr(dif/5)/8)*8
  else
	  dscrpos=dscrpos+8
	 end
 elseif dscrpos-selpos>0 then
  local dif=dscrpos-selpos
  if abs(dif)>640-447 then
   dscrpos-=flr(flr(dif/5)/8)*8
  else
	  dscrpos=dscrpos-8
	 end
 end
end

function doscroll2()
 if scrpos-selpos<-13 then
  local dif=scrpos-selpos
  if abs(dif+13)>17 then
   scrpos-=flr(dif/5)
  else
	  scrpos=scrpos+1
	 end
 elseif scrpos-selpos>-4 then
  local dif=scrpos-selpos
  if abs(dif+4)>17 then
   scrpos-=flr(dif/5)
  else
	  scrpos=scrpos-1
	 end
 end
 
 if xscrpos-selpos<-83 then
  local dif=xscrpos-selpos
  if abs(dif+83)>214 then
   xscrpos-=flr(flr(dif/5)/6)*6
  else
	  xscrpos=xscrpos+12
	 end
 elseif xscrpos-selpos>-24 then
  local dif=xscrpos-selpos
  if abs(dif+24)>214 then
   xscrpos-=flr(flr(dif/5)/6)*6
  else
	  xscrpos=xscrpos-12
	 end
 end
 
 if dscrpos-selpos<-383 then
  local dif=dscrpos-selpos
  if abs(dif+383)>640 then
   dscrpos-=flr(flr(dif/5)/8)*8
  else
	  dscrpos=dscrpos+16
	 end
 elseif dscrpos-selpos>-64 then
  local dif=dscrpos-selpos
  if abs(dif+64)>640-447 then
   dscrpos-=flr(flr(dif/5)/8)*8
  else
	  dscrpos=dscrpos-16
	 end
 end 
end

function scrlcenter()
 scrpos=mid(selpos-9,0,32750)
 xscrpos=mid(flr((selpos-54)/6)*6,0,32660)
 dscrpos=mid(flr((selpos-192)/8)*8,0,0x7fff-447)
 
 scrpos=scrpos-16000
 selpos=selpos-16000
 xscrpos=xscrpos-16000
 dscrpos=dscrpos-16000
 
 scrpos=mid(-16000,scrpos,32750-16000)
 xscrpos=mid(-16000,xscrpos,32660-16000)
 dscrpos=mid(-16000,dscrpos,(0x7fff-447)-16000)

 scrpos=scrpos+16000
 selpos=selpos+16000
 xscrpos=xscrpos+16000
 dscrpos=dscrpos+16000
 
 debug=xscrpos.." / "..scrpos
end
-->8
--list

function drw_list()
 cls(1)
 local last=0
 for i=0,19 do
  local loc=scrpos+i
  local ty=9+i*6
  local adrcol=6
  
  if last<=loc then
	  if loc==selpos then
	   adrcol=10
	   if selcol<3 then
	    rectfill(39+selcol*4,ty-1,43+selcol*4,ty+5,10)
	   elseif selcol<5 then
	    rectfill(47+selcol*4,ty-1,51+selcol*4,ty+5,10)
	   else
	    rectfill(55+selcol*4,ty-1,59+selcol*4,ty+5,10)
	   end
	  end
	  
	  print(sub(tostr(loc,true),0,6),8,ty,adrcol)
	  print(val3(peek(loc)),40,ty,12)
	  print(sub(tostr(peek(loc),true),5,6),60,ty,12)
	  print(conv(peek(loc)),76,ty)
	  print("..",32,ty,13)
   print("..",52,ty,13)
   print("..",68,ty,13)
   if peek(loc)>15 then
	   print(".."..chr(peek(loc)),108,ty,13)
	  else
	   print("..",108,ty,13)
	  end 
	  last=loc
  end
 end	 
 
 drawbottom()
 drawtop(4)
 fillp(0b1010010110100101.1)
 rectfill(125,9,126,119,13) 
 fillp()
 spr(5,125,9+108*(selpos/0x7fff))
 drawmouse()

end

function upd_list()
 checkrelease()
 scrpos=scrpos-16000
 selpos=selpos-16000
 xscrpos=xscrpos-16000
 dscrpos=dscrpos-16000
 
 if btnp(0) then
  selcol-=1
 end
 if btnp(1) then
  selcol+=1
 end
 selcol=selcol%13
 if btnp(2) then
  selpos-=1
 end
 if btnp(3) then
  selpos+=1
 end
 
 scrpos-=stat(36)*6
 scrpos=mid(0-16000,scrpos,32750-16000)
 selpos-=stat(36)*6
 selpos=mid(0-16000,selpos,0x7fff-16000)
	
	doscroll()

 scrpos=scrpos+16000
 selpos=selpos+16000
 xscrpos=xscrpos+16000
 dscrpos=dscrpos+16000
 if stat(30) then
  local k=stat(31)
  if k=="j" then
   dosearch()
  elseif k=="m" then
		 domap()
  else 
   if selcol<3 then
    k=tonum(k)
    if k!=nil then
	    local v=val3(peek(selpos))
	    v=subs(v,k,selcol+1)
	    v=mid(0,tonum(v),255)
	    poke(selpos,v)
	    selcol=selcol+1
    end
   elseif selcol<5 then
    local v=sub(tostr(peek(selpos),true),5,6)
		  v=subs(v,k,selcol-2)
		  
		  v=tonum("0x"..v)
		  if v==nil or v<0 then
		   v=0
		  end
		  poke(selpos,v)
		  selcol=selcol+1   
   else
    k=tonum(k)
    if k!=nil then
		   k=mid(0,k,1)
		   v=conv(peek(selpos))
		   v=subs(v,k,selcol-4)
		   v=tonum("0b"..v)  
		   poke(selpos,v)
		   selcol=selcol+1
    end    
   end   
	 end
 end
 
 if stat(34)==1 then
  --stat(32),stat(33)
  if released then
   released=false
	  local b=buttcheck()
	  if b=="" then
		  local mx=stat(32)
		  local my=stat(33)
		  if my>=8 then
		   if mx>=124 then
		    --scrollbar
		    local p=(my-10)/108
		    p=mid(0,p,1)
		    p=flr(p*0x7fff)
		    selpos=p
		    scrpos=mid(p-9,0,32750)
		   else
      --click
      if not(dontclick) then
				   local diff=flr((my-8)/6)
				   if 0x7fff-diff<scrpos then
				    selpos=0x7fff
				   else
				    selpos=scrpos+diff
				   end
				   if mx>=40 and mx<=50 then
				    selcol=flr((mx-40)/4)
				   elseif mx>=60 and mx<68 then
				    selcol=flr((mx-60)/4)+3
				   elseif mx>=76 and mx<108 then
				    selcol=flr((mx-76)/4)+5
				   end
			   end
			  end
		  end
		 else
		  mousec=3
		  if b=="search" then
		   dosearch()
		   released=false
		  elseif b=="hex" then
				 _upd=upd_hex
				 _drw=drw_hex
				 released=false
				 scrlcenter()
		  elseif b=="dots" then
				 _upd=upd_dots
				 _drw=drw_dots
				 released=false
				 scrlcenter()
		  elseif b=="map" then
				 domap()
				 released=false
		  end
		 end
		end
 else
  released=true
  dontclick=false
 end
end




-->8
--start
function drw_start()
 cls(8)
 printlogo(23,55)

 myl={{51,1,2},{52,1,8},{53,1,1},{54,1,8},{55,2,1},{57,1,8},{58,2,1},{60,1,8},{61,2,1},{63,2,8}}
 local pc=0
 local tme=anit*anit
 for i=1,#myl do
  local l=myl[i]

  local off=((tme)-8)+pc*2
  rectfill(off,l[1],128,l[1]+l[2]-1,l[3])

  if l[3]!=8 then
   rectfill(off,l[1],off+1,l[1]+l[2]-1,7)
  end
  pc+=l[2]
 end
 if tme>128 then
  _drw=drw_start2
  anit=0
 end
 
end

function drw_start2()
 local tme=anit*anit
 cls(2)
 for i=0,21 do
  srand(i)
  print(rndstr(),flr(anit/1)-128,i*6,8)
 end

 for i=0,128 do
  if (256-i)-tme>0 then
   line(-1,i,(256-i)-tme,i,8)
   line((256-i)-tme,i,(256-i)-tme+2,i,7)
   --pset((256-i)-tme,i,7)
   --pset((256-i)-tme-6,i,7)
  end
 end
 rectfill(0,45,128,73,8)
 printlogo(23,55)
 if anit>sback then
  _drw=drw_start3
 end
end

function drw_start3()
 local tme=(anit-sback)*(anit-sback)
 drw_start2()
 for i=0,128 do
  local c=1
  if i<8 or i>120 then
   c=8
  end
  line((256-i)-tme,i,128,i,c)
  line((256-i)-tme,i,(256-i)-tme+2,i,7)
  --pset((256-i)-tme,i,7)

 end

 if anit>sback+16 then
  anit=0
  _upd=upd_list
  _drw=drw_list
 end

end

function upd_start()
 anit+=1
end

function printlogo(lx,ly)
 line(23,53,102,53,1)
 line(23,51,102,51,2)
 spr(32,lx,ly)
 spr(33,lx+9,ly)
 spr(32,lx+18,ly)
 spr(34,lx+27,ly)
 spr(35,lx+36,ly,1,2)
 spr(36,lx+45,ly)
 spr(37,lx+54,ly)
 spr(38,lx+63,ly,1,2)
 spr(33,lx+72,ly)
 print(version,lx,ly+9)
end

function rndstr()
 ret=""
 for i=0,64 do
  ret=ret..rnd({"0","1"})
 end
 return ret
end
-->8
--hex

function drw_hex()
 cls(1)
 local last=0
 for i=0,19 do
  local loc=xscrpos+(i*6)
  local ty=9+i*6
  local adrcol=6
  
  if last<=loc then
	  if selpos>=loc and selpos<=loc+5 then
	   adrcol=10
	  end
	  print(sub(tostr(loc,true),0,6),8,ty,adrcol)
	  print("-",32,ty,13)
	  for j=0,5 do
	   if loc+j==selpos then
	    local bx=39+j*12
					if selhex==1 then
					 bx=bx+4
					end
					rectfill(bx,ty-1,bx+4,ty+5,10)
					pset(111-selhex+j*2,ty+4,10)
	   end
	   print(sub(tostr(peek(loc+j),true),5,6),40+j*12,ty,12)
	   line(111+j*2,ty+1,111+j*2,ty+2,tonum("0x"..sub(tostr(peek(loc+j),true),5,5)))
	   line(110+j*2,ty+1,110+j*2,ty+2,tonum("0x"..sub(tostr(peek(loc+j),true),6,6)))
	  end
	  --print("0xffff..ff.ff.ff.ff.ff.ff",8,ty,6)
	 end
 end
 last=loc
 
 drawbottom()
 drawtop(3)

 fillp(0b1010010110100101.1)
 rectfill(125,9,126,119,13) 
 fillp()
 spr(5,125,9+108*(selpos/0x7fff))
 drawmouse()
end

function upd_hex()
 checkrelease()
 if stat(34)==1 and released then
  local b=buttcheck()
	 if mousec==1 then
	  mousec=3
	 end
  if b=="search" then
   dosearch()
   released=false
	 elseif b=="list" then
		 _upd=upd_list
		 _drw=drw_list
		 released=false
		 scrlcenter()	  
  elseif b=="dots" then
		 _upd=upd_dots
		 _drw=drw_dots
		 released=false
		 scrlcenter()
  elseif b=="map" then
		 domap()
		 released=false
  else
	  local mx=stat(32)
	  local my=stat(33)
	  if my>=8 then
	   if mx>=124 then
	    --scrollbar
	    local p=(my-10)/108
	    p=mid(0,p,1)
	    p=p*0x7fff
	    p=flr(p/6)*6
	    selpos=p
	    xscrpos=mid(p-54,0,32660)
	   else
     --click
     if not(dontclick) then
	     local first=xscrpos+(flr((my-8)/6)*6)
 	    for j=0,5 do
			    if mx>=39+(j*12) and mx<=49+(j*12) then
		 	    if mx>=44+(j*12) then
		  	    selhex=1
		   	  else
		    	  selhex=0
		     	end
       	selpos=first+j		    
		    	end
     	end
     end
		   --if mx>=40 and mx<=50 then
		   -- selcol=flr((mx-40)/4)
		   --elseif mx>=60 and mx<68 then
		   -- selcol=flr((mx-60)/4)+3
		   --elseif mx>=76 and mx<108 then
		   -- selcol=flr((mx-76)/4)+5
		   --end
		  end
	  end  
  end
 elseif stat(34)==0 then
  dontclick=false
 end
  

 xscrpos=xscrpos-16000
 dscrpos=dscrpos-16000
 scrpos=scrpos-16000
 selpos=selpos-16000
 
 if btnp(0) then
  if selhex==0 then
   selhex=1
   selpos-=1
  else
   selhex=0
  end
 end
 if btnp(1) then
  if selhex==1 then
   selhex=0
   selpos+=1
  else
   selhex=1
  end
 end
 if btnp(2) then
  selpos-=6
 end
 if btnp(3) then
  selpos+=6
 end
 
 xscrpos-=stat(36)*6*6
 selpos-=stat(36)*6*6
 xscrpos=mid(0-16000,xscrpos,32660-16000)
 selpos=mid(0-16000,selpos,0x7fff-16000)

 doscroll()
 selpos=mid(-16000,selpos,0x7fff-16000)
 xscrpos=mid(-16000,xscrpos,32660-16000)
 xscrpos=xscrpos+16000
 dscrpos=dscrpos+16000
 selpos=selpos+16000
 scrpos=scrpos+16000

 if stat(30) then
  local k=stat(31)
  if k=="j" then
   dosearch()
  elseif k=="m" then
		 domap()
  else
	  local v=sub(tostr(peek(selpos),true),5,6)
			v=subs(v,k,selhex+1)
			v=tonum("0x"..v)
			if v==nil or v<0 then
			 v=0
			end
			poke(selpos,v)
	  if selhex==1 then
	   selhex=0
	   selpos+=1
	  else
	   selhex=1
	  end
	 end
	end
end
-->8
--dots
function drw_dots()
 cls(0)
 
 rectfill(0,121,127,127,uicol)
 print(debug,1,122,2)
 --print(adrinfo(selpos),1,122,2)

 loc=dscrpos-(6*8)
 
	for i=-6,55 do
	 local ty=9+i*2
	 if loc%64==0 then
		 print(sub(tostr(loc,true),0,6),8,ty,6)
		 pset(32,ty,13)
		 pset(34,ty,13)  	   
	 end
	 for u=0,7 do
	  if loc>=0 and ty>=9 then
		  local s=conv(peek(loc))
		  local c0,c1=5,7
		  if loc==selpos then
		   c0,c1=9,10
		  end
		  if _drw!=drw_map then
		   printbyte(peek(loc),36+u*9,ty,c0,c1)
	   else
	    line(36+u*9,ty,43+u*9,ty,5)
	   end
	  end
	  loc+=1
	 end
	end

 
 fillp(0b1010010110100101.1)
 rectfill(125,9,126,119,13) 
 fillp()
 pal(1,0)
 spr(5,125,9+108*(selpos/0x7fff))
 pal()
 drawbottom()
 drawtop(2)
 
 drawmouse()
end

function upd_dots()
 checkrelease()
 if stat(34)==1 and released then
  local b=buttcheck()
	 mousec=3
  if b=="search" then
   dosearch()
   released=false
	 elseif b=="list" then
		 _upd=upd_list
		 _drw=drw_list
	  released=false
	  scrlcenter()
  elseif b=="hex" then
		 _upd=upd_hex
		 _drw=drw_hex
		 released=false
		 scrlcenter()
  elseif b=="map" then
		 domap()
		 released=false
  else
   mousec=0
	  local mx=stat(32)
	  local my=stat(33)
	  if my>=8 then
	   if mx>=124 then
	    --scrollbar
	    local p=(my-10)/108
	    p=mid(0,p,1)
	    p=p*0x7fff
	    p=flr(p/8)*8
	    selpos=p
	    dscrpos=mid(p-192,0,0x7fff-447)
	   else
     --click
     if not(dontclick) then
      if mx>35 and mx<107 then
       selpos=(flr((my-8)/2)*8)+dscrpos+flr((mx-35)/9)
      end
     end
    end
   end
  end
 elseif stat(34)==0 then
  dontclick=false
 end
 
 if stat(30) then
  local k=stat(31)
  if k=="j" then
   dosearch()
  elseif k=="m" then
		 domap()
  end
 end
 
 xscrpos=xscrpos-16000
 dscrpos=dscrpos-16000
 scrpos=scrpos-16000
 selpos=selpos-16000
  
 if btnp(0) then
  selpos-=1
 end
 if btnp(1) then
  selpos+=1
 end
 if btnp(2) then
  selpos-=8
 end
 if btnp(3) then
  selpos+=8
 end

 dscrpos-=stat(36)*8*12
 selpos-=stat(36)*8*12

 doscroll()

 selpos=mid(-16000,selpos,0x7fff-16000)
 dscrpos=mid(-16000,dscrpos,(0x7fff-447)-16000)
 
 xscrpos=xscrpos+16000
 dscrpos=dscrpos+16000
 scrpos=scrpos+16000
 selpos=selpos+16000
 
end

function printbyte(b,x,y,c0,c1)
 local c
 local c0=c0 or 5
 local c1=c1 or 7
 a=0
 for i = 7,0,-1 do
  a=2^i
  c=c1
  if band(a,b)/a==0 then
   c=c0
  end
  pset(x,y,c)
  x=x+1
 end
 return t
end

-->8
--map

function domap()
 
 _drw_prev=_drw
 _upd_prev=_upd
 
 _upd=upd_map
 _drw=drw_map
 maph=17
 
end

function drw_map()
 _drw_prev()
 
 pal(2,15)
 spr(48,3,0)
 pal()
 
 rectfill(10,8,117,maph,1)
 --rect(6,8,120,117,15)
 --rect(7,8,119,116,14)
 line(10,8,10,maph-1,14)
 line(116,8,116,maph-1,14)
 rectfill(10,maph-7,116,maph-1,14)
 --rect(8,8,118,115,15)
 
 
 local sx=16
 local sy=maph-107
 local sell=-1
 for j=0,31 do
  for i=0,31 do
   local l=getmloc((j*1024)+(i*32))
   local c=minfo[l][4]
   if j*32+i==selmap then
    c=7
    sell=l
   end   
   if sy+j*3>8 then
    rectfill(sx+i*3,sy+j*3,sx+i*3+1,sy+j*3+1,c)
   end
  end
 end
 if sell>0 then
  clip(10,maph-7,106,9)
  --minfo[sell][1]
  print(sub(tostr(selmap*32,true),0,6)..":"..minfo[sell][3],12,maph-6,2)
  clip()
 end
 
 drawbottom() 
 drawmouse()
end

function upd_map()
 maph+=(117-maph)/2
 
 checkrelease()
 if btnp(5) then
  _upd=_upd_prev
  _drw=_drw_prev 
  return
 end

 local mx=stat(32)+1
 local my=stat(33)+1
 local mover=false
 mx=mx-16
 my=my-10
 mx=flr(mx/3)
 my=flr(my/3)
 if mx>=0 and mx<=31 and my>=0 and my<=31 then
  selmap=my*32+mx
  mover=true
 end
 
 if stat(34)==1 and released then
  if mover and selmap>=0 then
   selpos=selmap*32
   
   --minfo[getmloc(selmap*32)][1]
  end
  _upd=_upd_prev
  _drw=_drw_prev
  if mousec==1 then mousec=3 end
  released=false
  dontclick=true
  return
 end
 
 if stat(30) then
  --keyboard
  local k=stat(31)
  if k=="m" then
   _upd=_upd_prev
   _drw=_drw_prev
	 end
 end
 
 scrpos=scrpos-16000
 selpos=selpos-16000
 xscrpos=xscrpos-16000
 dscrpos=dscrpos-16000
 doscroll()
 scrpos=mid(-16000,scrpos,32750-16000)
 xscrpos=mid(-16000,xscrpos,32660-16000)
 dscrpos=mid(-16000,dscrpos,(0x7fff-447)-16000)

 scrpos=scrpos+16000
 selpos=selpos+16000
 xscrpos=xscrpos+16000
 dscrpos=dscrpos+16000
end

function getmloc(l)
 for i=1,#minfo do
  if l>=minfo[i][1] and l<=minfo[i][2] then
   return i
  end
 end
end
-->8
--search/jump

function dosearch()
 _drw_prev=_drw
 _upd_prev=_upd
 
 _upd=upd_search
 _drw=drw_search

 jcur=1
 jtxt=sub(tostr(selpos,true),3,6)
end

function upd_search()
 checkrelease() 
 if btnp(0) then
  jcur-=1
 end
 if btnp(1) then
  jcur+=1
 end
 if btnp(2) or btnp(3) or btnp(5) then
  _upd=_upd_prev
  _drw=_drw_prev 
  return
 end
 jcur=mid(1,jcur,4)

 if stat(34)==1 and released then
  _upd=_upd_prev
  _drw=_drw_prev
  if mousec==1 then mousec=3 end
  released=false
  return
 end
 
 if stat(30) then
  --keyboard
  local k=stat(31)
  if k=="j" then
   _upd=_upd_prev
   _drw=_drw_prev
  else
	  jtxt=subs(jtxt,k,jcur)
	  selpos=tonum("0x"..jtxt)
	  if selpos==nil or selpos<0 then
	   selpos=0
	  end
	  jtxt=sub(tostr(selpos,true),3,6)
	  
	  jcur=jcur+1
	  if jcur>4 then
	   _upd=_upd_prev
	   _drw=_drw_prev
	  end
	 end
 end
 scrpos=scrpos-16000
 selpos=selpos-16000
 xscrpos=xscrpos-16000
 dscrpos=dscrpos-16000
 doscroll2()
 scrpos=mid(-16000,scrpos,32750-16000)
 xscrpos=mid(-16000,xscrpos,32660-16000)
 dscrpos=mid(-16000,dscrpos,(0x7fff-447)-16000)

 scrpos=scrpos+16000
 selpos=selpos+16000
 xscrpos=xscrpos+16000
 dscrpos=dscrpos+16000
end

function drw_search()
 _drw_prev()
 
 pal(2,15)
 spr(21,12,0)
 pal()
 
 rectfill(0,8,128,16,14)
 if sin(time()*2)<0 then
  rectfill(37+4*jcur,9,41+4*jcur,9+5,8)
 end
 print("jump to:",2,10,2)
 print("0x",34,10,15)
 print(jtxt,42,10,7)
 drawmouse()
end

__gfx__
01000000000100000000000000000000000000001100000050444442944444492244440505111115111111118000000000000000000000000000000000000000
1710000000171000000000000000000000000000dd000000d0444442e444444e2244440d0d11111d111111118000000000000000000000000000000000000000
1771000000171101000000000001010100000000dd000000d0444442944444492244440d0d11111d11111111800d666666610000000000000000000000000000
177710000017171710000000001717171000000011000000d04444424444444e2244440d0d11111d1111111180060000000d07aaaa1111111111100000000000
177771000117777710000000011777771000000000000000d0444442444444492244440d0d11111d11111111800600aaa90d0999991111111111100000066000
177110001717777710000000171777771000000000000000d0444442e444444e2244440d0ddddddddddddddd80060aaa9a9d000000000000000000d0d0600600
011710000177777710000000017777771000000000000000d0222421422444492244440d000000000000000080069aa90f9d07eeeeeeeeeeee11100d00006000
000000000011777100000000001177710000000000000000502224214224444e2244440555555555555555558006a9a9ff0d0eeeeeeeeeeeee1110d0d0060000
88888888000177718888888800017771888888888888888867444442944444492244447666666666666666668006009fff0d0888888888888811100000666600
8888888800001110888888880000111088888888888222286d244442e444444e2244446666dd66666666666680060000000d0888888888888811100000000000
82822228000000008282828800000000882828288882882822244442944444491122444222222222222222228001ddddddd10000000000000000000000000000
88888888000000008888888800000000828282888882882844444442e444444e1122444444444444444444448000000000000000000000000000000000000000
82822228000000008282828800000000882828288822222844444442944444492244444444444444444444448000000000000000000000000000000000000000
88888888000000008888888800000000828282888222888844444442e444444e1222222444444444444444442888888888888888888888888888888888888888
82822228000000008282828800000000882828288228888844444442944444491222222444444444444444440222222222222222222222222222222222222222
88888888000000008888888800000000888888888888888844444442e444444e2244444444444444444444444000000000000000000000000000000000000000
18888881111111111111111111111111118888881111111111111111944444491155555555555555555555555555555555555555555555519444444911555555
11888811111111111111111111111111118888881111111111111111e444444e155555555555555555555555555555555555555555555555e444444e15555555
11188111888888881188888888888811118888881188881188888811944444497666666666666666666666666666666666d66666666666679444444976666666
11111111111111111111111111111111118888881188881111111111e444444e111111111111111111111111111111111111111111111111e444444e11111111
11111111111111111111111111111111118888881188881111111111944444491dddddddddddddddddddddddddddddddddddddddddddddd1944444491ddddddd
11811811888888888888881111888888118888881188881111811188e444444e1dddddddddddddddddddddddddddddddddddddddddddddd1e444444e1ddddddd
11888811111111111111111111888888111111111111111111881118944444491ddddddddd5dddddddddddddddddddddddddddddddddddd1944444491ddddddd
11888811111111111111111111888888111111111111111111888111e444444e5666666665d6666666666666666666666666666666666665e444444e56666666
88888888888888888888888811888888888888888888888888888811944444490000000000000000000000000000000000000000000000009444444900000000
82222228888888888888888818888888888888888888888888888881e444444e011111111111111120000000000000021111111111111110e444444e00555555
82888828888888888888888888888888888888888888888888888888944444240011111122222222401111100111110422222222222222209444444900511111
82822828888888888888888888888888888888888888888888888888e44444240011111122222222401111100111110422222222222222204444444e00d11111
82828828888888888888888888888888888888888888888888888888944444490111111122222222400000500500000422222222222222204444444900d11111
82888828888888888888888888888888888888888888888888888888e44422240000011122222222401111100111110423bbb33222222110e444444e00dddddd
822222288888888888888888888888888888888888888888888888889444222400000111222222224011111001111103bb777b33122221104224444900511111
88888888888888888888888888888888888888888888888888888888e444444e0111111122222222401111100111113bb7b7bb33312222204224444e00d11111
b77bbbb3331111111111111d1111111001111111d111111111111d0094444449001000002222222240111110011133b7b77bbbb3331111109444444900d11111
b77b7b33331111111111111d1111111001111111d111111111111d00e444444e0010000022222222401111100113bb3bb77b7b3333111110e444444e00d11111
7bbbbbb3313311111111111d1111111001111111d111111111111d0094444449011111112222222240000000000bbbbb7bbbbbb3313312209444444900d11111
bb7bbbb1331311111111111d1111111001111111d111111111111d004444444e000000001111111125555555553b37bbbb7bbbb133131110e444444e00d11111
bbbbb313331113111111111d1111111001111111d111111111111d00444444490111111155555555555555555bb33bb7bbbbb313331113109444444900d11111
b7bbbb33111311131111111d1111111001111111d111111111111d00e444444e0111111155555555555555553bb7b3bbb7bbbb3311131113e444444e00d11111
7bbb3311333313111111111d1111111001111111d111111111111d004224444901111111555555555555555533bbb7b77bbb3311333313119444444900d11111
7bb7b3b33111331311111115111111100111111151111111111115004224444e011111115555555555555555b7b3bbb77bb7b3b331113313e444444e00511111
b7bbb3bb11311113ddddddddddddddd00ddddddddddddddddddddd0094444449011111155555555555555555bb333b7bb7bbb3bb113111139444444900dddddd
bbbb3113333133100000000500000000000000005000000000000500e222224401111155555555555555555553b7bbbbbbbb311333313310e222224400500000
7bb3bb3b311111000000000d0000000000000000d000000000000d009222224401111555555298255555555555bb373b7bb3bb3b311111509222224400d00000
b3333333133111000000000d0000000000000000d000000000000d00e444444e01115555555118885555555555333bb3b333333313311150e444444e00d00000
bb3bb3b311111dddddddddddddddddd00ddddddddddddddddddddd0042242224055d66666666f0f1d666666666631333bb3bb3b3111116604224222400dddddd
1313311111110000000000000000000000000000000000000000000042242224015555555552fffff88555555555113313133111111155504224222400000000
1111111111155555555555555555555005555555555555555555555094444449055555555552ff1ff68555555555511111111111111555509444444905555555
111111111d66666666666666666666600666666666666666666666d5422222245d666666666f4112d6666666666666611111111116666665422222245d666666
54522525555555551555555555555550055555555555555515555555555555555555555555551212888555555555555554522525555555551555555555555555
5542225555555555155555555555555005555555555555551555555555555555555555555550d000006055555555555555422255555555551555555555555555
55542555555555551555555555555550055555555555555515555555555555555555555555550000000555555555555555542555555555551555555555555555
55544555555555551555555555555550055444225555555515555555555555555555555555555555155555555555555555544555555555551555555555555555
55594455555555555555555555555550082888255555555555555555555555555555555555555555555555555555555555594455555555555555555555555555
55594555555555551555555555555550ff7ff0f55555555515555555555555555555555555555555155555555555555555594555555555551555555555555555
55594555555555555555555555555550ff7ffff55555555555555555555555555555555555555555555555555555555555594555555555555555555555555555
55594555555555551555555555555550fff4fff45555555515555555555555555555555555555555155555555555555555594555555555551555555555555555
9dd941115555555555555555555555888ff4fd2485555555555555555555555555555555555555555555555555555555ddd9411155555555555555bbbbbbbbbb
9f1940015555555515555555555528888777ddd88e555555155555555555555555555555555555551555555555555555111940015555555515553bbbbbbbbbbb
9f4941215555555515555555555d28880f0000408e2555551555555555555555555555555555555515555555555555551229412155555555155d3bbbbbbbbbbb
9f4d2221555555551555555555dd2888800000088e2d5555155555555555555555555555555555551555555555555555122222215555555515dd3bbbbbbbbbbb
9f41d11155555555155555555ddd2888888888888e21d55515555555555555555555555555555555155555555555555511111111555555551ddd3bbbbbbbbbbb
9f41dd555555555515555555dddd2888888888888e21dd551555555555555555555555555555555515555555555555555555555555555555dddd3bbbbbbbbbbb
7f4ddd9ddddddddd5ddd888ddddd2888eeeeeeee7e2ddd8d5ddddddddddddddddddddddddddddddd5dddddddddddddddddddddddddddbbbddddd3bbb77777777
ffdddd960000000006e8881ddddd2eee88888888eedddd8600000000000000000000000000000000000000000000000000000000067bbb1ddddd3777bbbbbbbb
4946dd9f555555556e88821dddd6e822222222222826dd8e5555555555555555555555555555555555555555555555555555555567bbb31dddd67b3333333333
440d7d9f55555555e888e2dddd71220000020000220d7d8e555555555555555555555555555555555555555555555555555555557bbb73dddd71330000030000
0411d69f555555558888e21dd7122011110201110211d68e5555555555555555555566666666666666666666666d555555555555bbbb731dd713301111030111
04111dff555555558888e21d712201111102011102111dee55555555555555555555666666666666666666666666555555555555bbbb731d7133011111030111
0491119f5555555588888ed612201111110201110281118e55555555555555555555666666666666666666666666555555555555bbbbb7d61330111111030111
9449994955555555888eee8122011111110201108228882855555555555555555555666666666666666666666666555555555555bbb777b13301111111030110
444444d6555555558ee82222228eee8888828888222222d655555555555555555555555555555555555555555555555555555555b77b333333b777bbbbb3bbbb
4444449d55555555e668222222122222112122222222228d55555555555555555555555555555555555555555555555555555555766b33333313333311313333
444444495555555566d822222221222222212222222222285555555555555555555555555555555555555555555555555555555566db33333331333333313333
00044444555555556d822222222212222221222000022222555555555555555555555555555555555555555555555555555555556db333333333133333313330
00004444555555558822222000002122222122000000222255555555555555555555666666666666666666666666555555555555bb3333300000313333313300
1110044455555555222222000000021222212001111002225555555555555555555566666666669aaa666666666d555555555555333333000000031333313001
dd1104505555555525222001dd10021111122011dd110250555555555555555555556666666669a9aaa6666666d555555555555535333001dd10031111133011
dd1105005555555502552011dd11025555552011dd110500555555555555555555111166666669f09a9ff6666d6d55555555555503553011dd11035555553011
1111000055555555000000111111000000000011111100005555555555555555cc144455555555ff9a8ff5555555555555555555000000111111000000000011
11100005555555555000000111100000000000011110000555555555555555544c440455555554fff0fff5555555555555555555500000011110000000000001
55555555555555555555555555555555555555555555555555555555555555544c44445555555402f0ff55555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555444e8448555555522288855555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555554488128666666040000f06666666555555555555555555555555555555555555
5555555555555555555555555555555555555555555555555555555555555555cc11116666666600000066666666555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555504000020666666666666666666666555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555550000006666666666666666666666555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555554ff5555555555555555555555555555
5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555f0f4ff5555555555555555555555555
5555555555555555555555555555555555555555555555555559555555555555555555555555555555555555555555555ff04fff555555555555555555555555
555555555555555555555555555555555555555555555555559495555555555555555555555555555555555555555555dff774ff555555555555555555555555
55555555555ddd5555555555555555555555555555555555557965555555555555556666666666666666666666665555dd4777ff555555555555555555555555
5555555555d111d555555555555555555555555555555555597764555555555555556666666666666666666666665555552887f5555555555555555555555555
5555555555101015555555555555555555555555555555555799460555555555555566666666666666666666666655555111c855555555555555555555555555
5555555555101015555555555555555555555555555555559777664055555555555566666666666666666666666d555504000f05555555555555555555555555
55555555555111555555555555555555555555555555555599776440555555555555555555555555555555555555555550000055555555555555555555555555
55555555555555555555555555555555555555555555555559994405555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555559555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555594955555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555579655555555555555555555555555555555555555555555555555555555555555555555555555555555555
66666666666666666666666666666666666666666977646666666666666666666666666666666666666666666666666666666d66666666666666666666666666
666666666666666666666666666666666666666667994606666666666666666666666666666666666666666666666666666d5666666666666666666666666666
55555555555555555555555555555555555555559777664055555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555559977644055555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555999440555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555d66666666666666666666666555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555666666666666666666666666555555555555555588555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555666666666666666666666666555555555555558882155555555555555555
5555555555555555555555555555555555555555555555555555555555555555555566666666666666666666666655555555555555ff8855f555555555555555
5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555f0ff5ff555555555555555
5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555552ff22fff555555555555555
115555555555555555555555555555599999999999555555555555555555555555555555777777755555555555555555555555588421f2ff8855555555555555
111155555555555555555555555555f999999999999455555555555555555555555555557e8e8e705555555555555555555555e8881115558882555555555555
1111d5555555555555555555555554f9999999999994d555555555555555555555556666788888706666666666665555555552e88040000f0882d55555555555
1111dd5555555555555555555555d4f9999999999994dd555555555555555555555556667788877066666666666655555555d2e8880000008882dd5555555555
1111ddd55555555555555555555d14f9999999999994ddd555555555555555555555d666777877706666666666665555555d12e8888888888882ddd555555555
1111dddd555555555555555553bbb339999999999994dddd55555555555555555555666677777770666666666666555555dd12e8888888888882dddd53bbb335
1111ddddd111555555555553bb777b331fffffff9994ddddd99955555555555555555555d55555d0555555555555555558ddd2e7eeeeeeee8882ddd3bb777b33
5551ddddd01115655555553bb7b7bb3331999999fff4ddddd1999f65555555555555555500000000555555555555555568ddddee88888888eee2dd3bb7b7bb33
11156dddd0111156555533b7b77bbbb333114444449f6dddd14999f65555555555555555555555555555555555555555e8dd628222222222228e33b7b77bbbb3
001107dddd1511155553bb3bb77b7b3333111000004417dddd4f999f5555555555555555555555555555555555555555e8d7d022000020000023bb3bb77b7b33
0001107dd0151111555bbbbb7bbbbbb3313310111104417dd14f99995555555555556666666666666666666666665555e86d112011102011110bbbbb7bbbbbb3
00001107d0151111553b37bbbb7bbbb13313111111104417d14f99995555555555556666666666666666666666665555eed1112011102011113b37bbbb7bbbb1
000001106d5111115bb33bb7bbbbb31333111311111104416df999995555555555556666666666666666666666665555e8111820111020111bb33bb7bbbbb313
00000011015551113bb7b3bbb7bbbb33111311131111104419fff99955555555555566666666666666666666666d555582888228011020113bb7b3bbb7bbbb33
115551111111155133bbb7b77bbb33113333131199fff94444449ff955555555555555555555555555555555555555556d2222228888288833bbb7b77bbb3311
1111101111111665b7b3bbb77bb7b3b331113313444442444444966f5555555555555555555555555555555555555555d822222222221211b7b3bbb77bb7b3b3
__label__
22888288828882888288828822888288228882882288228882888288828882882288828882888288828822888288228882888288828822882288228822882288
22828282828282828282822822828228228282282228228282828282828282282282828282828282822822828228228282828282822822282228222822282228
22828282828282828282822822828228228282282228228282828282828282282282828282828282822822828228228282828282822822282228222822282228
22828282828282828282822822828228228282282228228282828282828282282282828282828282822822828228228282828282822822282228222822282228
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22882288828882882288228882888288228822882288828882888288828882882288228822888288828882888288228822882288828822888288228822888288
22282282828282282228228282828228222822282282828282828282828282282228222822828282828282828228222822282282822822828228222822828228
22282282828282282228228282828228222822282282828282828282828282282228222822828282828282828228222822282282822822828228222822828228
22282282828282282228228282828228222822282282828282828282828282282228222822828282828282828228222822282282822822828228222822828228
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
82882288828882888288228882882288228822888288828822882288228822888288828822882288228882888288828882888288828822882288228822888288
82282282828282828228228282282228222822828282822822282228222822828282822822282228228282828282828282828282822822282228222822828228
82282282828282828228228282282228222822828282822822282228222822828282822822282228228282828282828282828282822822282228222822828228
82282282828282828228228282282228222822828282822822282228222822828282822822282228228282828282828282828282822822282228222822828228
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22888288828822888288828882888288228882888288828822882288828822882288828882888288828822888288828882882288828822888288228882882288
22828282822822828282828282828228228282828282822822282282822822282282828282828282822822828282828282282282822822828228228282282228
22828282822822828282828282828228228282828282822822282282822822282282828282828282822822828282828282282282822822828228228282282228
22828282822822828282828282828228228282828282822822282282822822282282828282828282822822828282828282282282822822828228228282282228
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
82882288828822882288828882882288228822882288828882882288228822882288828882888288228822882288828822888288828882882288228882888288
82282282822822282282828282282228222822282282828282282228222822282282828282828228222822282282822822828282828282282228228282828282
82282282822822282282828282282228222822282282828282282228222822282282828282828228222822282282822822828282828282282228228282828282
82282282822822282282828282282228222822282282828282282228222822282282828282828228222822282282822822828282828282282228228282828282
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
82888288228822882288828882888288828822882288228822888288228822888288828882888288828822882288828822888288828822888288228882882288
82828228222822282282828282828282822822282228222822828228222822828282828282828282822822282282822822828282822822828228228282282282
82828228222822282282828282828282822822282228222822828228222822828282828282828282822822282282822822828282822822828228228282282282
82828228222822282282828282828282822822282228222822828228222822828282828282828282822822282282822822828282822822828228228282282282
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
82882288828882882288828822888288828882882288828882882288228822882288828882888288228822882288228822888288228822888288228822888288
82282282828282282282822822828282828282282282828282282228222822282282828282828228222822282228222822828228222822828228222822828282
82282282828282282282822822828282828282282282828282282228222822282282828282828228222822282228222822828228222822828228222822828282
82282282828282282282822822828282828282282282828282282228222822282282828282828228222822282228222822828228222822828228222822828282
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22882288828882888288228882882288828882882288828882882288228822888288228882888288228822882288228822888288828882888288828882888288
22282282828282828228228282282282828282282282828282282228222822828228228282828228222822282228222822828282828282828282828282828282
22282282828282828228228282282282828282282282828282282228222822828228228282828228222822282228222822828282828282828282828282828282
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888222222222222222222222222222222222222222222222222222222222222222222222222222222228888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888111111111111111111111111111111111111111111111111111111111111111111111111111111118888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888188888818111111118188888818111111118111111118118888888111111118111111118111111118888888888888888888888888
88888888888888888888888118888118111111118118888118111111118111111118118888888111111118111111118111111118888888888888888888888888
88888888888888888888888111881118888888888111881118118888888888888118118888888118888118888888118888888888888888888888888888888888
88888888888888888888888111111118111111118111111118111111118111111118118888888118888118111111118111111118888888888888888888888888
88888888888888888888888111111118111111118111111118111111118111111118118888888118888118111111118111111118888888888888888888888888
88888888888888888888888118118118888888888118118118888888118118888888118888888118888118118111888888888888888888888888888888888888
88888888888888888888888118888118111111118118888118111111118118888888111111118111111118118811188111111118888888888888888888888888
88888888888888888888888118888118111111118118888118111111118118888888111111118111111118118881118111111118888888888888888888888888
88888888888888888888888888888888888888888888888888888888888118888888888888888888888888888888118888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888188888888888888888888888888888888818888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
82888288828882882288228822888288828822888288228882882288828822888288828822888288828882888288228882888288828822888288228882888288
82828282828282282228222822828282822822828228228282282282822822828282822822828282828282828228228282828282822822828228228282828282
82828282828282282228222822828282822822828228228282282282822822828282822822828282828282828228228282828282822822828228228282828282
82828282828282282228222822828282822822828228228282282282822822828282822822828282828282828228228282828282822822828228228282828282
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
82882288228822882288828882882288828822882288828882888288228822882288228882888288828822882288228882888288828822882288828882882288
82282228222822282282828282282282822822282282828282828228222822282228228282828282822822282228228282828282822822282282828282282282
82282228222822282282828282282282822822282282828282828228222822282228228282828282822822282228228282828282822822282282828282282282
82282228222822282282828282282282822822282282828282828228222822282228228282828282822822282228228282828282822822282282828282282282
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22882288228882882288228822882288828882882288228822882288228882882288828822888288828822882288228822882288828822882288828882882288
22282228228282282228222822282282828282282228222822282228228282282282822822828282822822282228222822282282822822282282828282282282
22282228228282282228222822282282828282282228222822282228228282282282822822828282822822282228222822282282822822282282828282282282
22282228228282282228222822282282828282282228222822282228228282282282822822828282822822282228222822282282822822282282828282282282
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22882288228882882288828882882288828882882288228822888288828822882288228882888288828822882288228882882288228822888288828882888288
22282228228282282282828282282282828282282228222822828282822822282228228282828282822822282228228282282228222822828282828282828228
22282228228282282282828282282282828282282228222822828282822822282228228282828282822822282228228282282228222822828282828282828228
22282228228282282282828282282282828282282228222822828282822822282228228282828282822822282228228282282228222822828282828282828228
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22882288828882882288828822882288228882882288828822882288828822888288828822882288828882888288828882888288228882888288828822888288
22282282828282282282822822282228228282282282822822282282822822828282822822282282828282828282828282828228228282828282822822828228
22282282828282282282822822282228228282282282822822282282822822828282822822282282828282828282828282828228228282828282822822828228
22282282828282282282822822282228228282282282822822282282822822828282822822282282828282828282828282828228228282828282822822828228
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
82888288228822882288828882882288828822882288828882888288828882888288228822882288828882888288228882882288828882882288828882882288
82828228222822282282828282282282822822282282828282828282828282828228222822282282828282828228228282282282828282282282828282282282
82828228222822282282828282282282822822282282828282828282828282828228222822282282828282828228228282282282828282282282828282282282
82828228222822282282828282282282822822282282828282828282828282828228222822282282828282828228228282282282828282282282828282282282
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22882288828822882288228882882288828882882288828822888288828882882288828882888288228882888288828882882288228822882288828882882288
22282282822822282228228282282282828282282282822822828282828282282282828282828228228282828282828282282228222822282282828282282282
22282282822822282228228282282282828282282282822822828282828282282282828282828228228282828282828282282228222822282282828282282282
22282282822822282228228282282282828282282282822822828282828282282282828282828228228282828282828282282228222822282282828282282282
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
82888288228882888288828882882288828882882288828882888288828822882288828822888288828822882288228882882288828822888288228882882288
82828228228282828282828282282282828282282282828282828282822822282282822822828282822822282228228282282282822822828228228282282228
82828228228282828282828282282282828282282282828282828282822822282282822822828282822822282228228282282282822822828228228282282228
82828228228282828282828282282282828282282282828282828282822822282282822822828282822822282228228282282282822822828228228282282228
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
82888288228882888288828882882288228882888288828882888288228882882288228822888288228882888288228822882288228882882288828882882288
82828228228282828282828282282228228282828282828282828228228282282228222822828228228282828228222822282228228282282282828282282228
82828228228282828282828282282228228282828282828282828228228282282228222822828228228282828228222822282228228282282282828282282228
82828228228282828282828282282228228282828282828282828228228282282228222822828228228282828228222822282228228282282282828282282228
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22882288828882888288828822882288828882888288228822888288828882888288228822888288228882882288828882882288228882882288828882882288
22282282828282828282822822282282828282828228222822828282828282828228222822828228228282282282828282282228228282282282828282282282

__map__
0000000000000000000001002800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000800002241024000240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
02 41424344

